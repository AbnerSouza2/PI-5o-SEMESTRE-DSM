// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id        Int     @id @default(autoincrement())
  name      String
  imagePath String?
  users     User[]
}

model User {
  id           Int     @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String  @unique
  password     String
  phoneNumber  String?
  cpf          String  @unique
  storeId      Int
  refreshToken String?
  store        Store   @relation(fields: [storeId], references: [id])
}

model Cliente {
  id         Int         @id @default(autoincrement())
  nome       String
  cpf        String      @unique
  telefone   String
  orcamentos Orcamento[]
}

model OrcamentoItem {
  id             Int           @id @default(autoincrement())
  tipoOrcamento  TipoOrcamento
  orcamentoValor Float
  orcamentos     Orcamento[]
}

enum TipoOrcamento {
  SERVICO
  PECA
}

model Orcamento {
  id              Int           @id @default(autoincrement())
  clienteId       Int
  orcamentoItemId Int
  placa           String
  modelo          String
  status          Status // Formatei usando Enum aleluia amem
  dataCriacao     DateTime      @default(now())
  cliente         Cliente       @relation(fields: [clienteId], references: [id])
  orcamentoItem   OrcamentoItem @relation(fields: [orcamentoItemId], references: [id])
}

enum Status {
  AGUARDANDO
  EM_MANUTENCAO
  REJEITADO
  FINALIZADO
  CANCELADO
}
